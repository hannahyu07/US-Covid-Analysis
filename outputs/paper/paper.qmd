---
title: "How did local health infrastructure and socio-political factors within different states and counties in the United States affect the disparities in COVID-19 outcomes, and what lessons can be learned for more targeted public health preparedness and response strategies in future pandemics?"
author: 
  - Adrian Ly
  - Sakhil Goel
  - Hannah Yu
thanks: "Code and data are available at: https://github.com/hannahyu07/US-Covid-Analysis.git"
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
toc: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false
#### Workspace setup ####
library(tidyverse)
library(sf)
library(readxl)
library(knitr)
library(janitor)
library(lubridate)
library(dplyr)
library(data.table)
library(RColorBrewer)
library(ggpubr)
library(scales)

#### Reading files ####

ghs_data <- read_excel(here::here("inputs/data/GHS_index.xlsx"))
world_map <- st_read(here::here("inputs/data/world/World_Countries__Generalized_.shp"))
life_exp <- read.csv(here::here("inputs/data/life_table.csv"), stringsAsFactors = FALSE)
vote_share <- read.csv(here::here("inputs/data/Vote_share_2020_data.csv"), stringsAsFactors = FALSE)
```


# Introduction

*This reproduction was performed after a replication on the Social Science Reproduction platform: ****[link here](https://www.socialsciencereproduction.org/reproductions/c35e8e98-762d-4c00-a1a3-544ed0b2008d/index)***

# Data {#sec-data}



## Source

The datasets utilized throughout this paper was obtained from the `original paper` [@citearticle]. 

## Methodology

`R` [@citeR] was the language and environment used for the bulk of this analysis, alongside `tidyverse` [@citeTidyVerse], `sf` [@citeSF], `readxl` [@citeReadXL], `knitr` [@citeKnitR], `janitor` [@citeJanitor], `lubridate` [@citeLubridate], `dplyr` [@citeDplyr], `data.table` [@citeDataTable], `RColorBrewer` [@citeRColorBrewer], `ggpubr` [@citeggpubr], `ggplot2` [@citeggplot], `here` [@citeHere], and `scales` [@citeScales].  

## Data Measurement

## Data cleaning

# Results

Our results are summarized in @fig-GHS.


```{r}
#| echo: false
#| eval: true
#| label: fig-GHS
#| fig-cap: Global Health Security Index Scores by Country
#| warning: false

ghs_data <- ghs_data %>%
  mutate(COUNTRY = case_when(
    Country == "United States of America" ~ "United States",
    Country == "Bolivia (Plurinational State of)" ~ "Bolivia",
    # Add other necessary name changes here
    TRUE ~ Country
  ))

world_ghs <- merge(world_map, ghs_data, by.x = "COUNTRY", by.y = "COUNTRY", all.x = TRUE)


ggplot(data = world_ghs) +
  geom_sf(aes(fill = `OVERALL SCORE`), color = "white") +
  scale_fill_distiller(palette = "Spectral", na.value = "lightgrey", 
                       name = "GHS Index Score", direction = 1,
                       limits = c(min(ghs_data$`OVERALL SCORE`, na.rm = TRUE), max(ghs_data$`OVERALL SCORE`, na.rm = TRUE)),
                       labels = comma) +  # Use comma to format numbers with commas
  theme_minimal() +
  theme(legend.position = "bottom",
        plot.title = element_text(hjust = 0.5))

# Save the plot to a file
ggsave("GHS_Index_Map.png", width = 11, height = 8)
```







```{r fig.width=7, fig.height=3.5}
#| echo: false
#| eval: true
#| label: fig-ELE
#| fig-cap: Estimates of Life Expectancy at Birth, by Race 2006-2021
#| warning: false


# Reshape the data if necessary
life_exp_melted <- reshape(
  life_exp,
  idvar = "year_id",
  varying = list(names(life_exp)[-1]), 
  v.names = "life_exp",
  times = names(life_exp)[-1],
  new.row.names = 1:1e5,
  direction = "long"
)
life_exp_melted$race <- gsub("_", " ", life_exp_melted$time)  # Convert "_" to " " in race names
life_exp_melted <- life_exp_melted[, c("year_id", "race", "life_exp")]

life_exp_melted[life_exp_melted$race == 'All', "race"] <- 'All races and origins'

## CREATE PANEL A
est_life <- ggplot(data = life_exp_melted[!(life_exp_melted$race %like% 'AIAN|Asian'), ], aes(x = year_id, y = life_exp, color = race)) +
  geom_point(shape = 16, size = 3.5, alpha = 0.9) +  # Circular points with size 2
  geom_line(aes(group = race), alpha = 0.56, size = 1.5) +  # Add group aesthetic for lines
  scale_y_continuous(name = 'Life expectancy at birth', limits = c(65, 85)) +
  scale_x_continuous(name = '', breaks = seq(2006, 2020, by = 2), limits = c(2005.5, 2021.5)) +
  scale_color_manual(values = c('#0c4928', '#0b3669', '#4c2962', '#5a0f1c'), 
                     labels = c("All races and origins", "Hispanic", "Black", "White")) +
  # Darker color values
  theme_minimal() +
  theme(axis.title = element_text(size = 14),  # Adjusting the size of the y-axis label
        axis.text = element_text(size = 12),
        legend.position = 'bottom',  # Set legend position to bottom
        legend.justification = 'center',  # Center the legend
        legend.text = element_text(size = 10),  # Adjusting the font size for legend text
        legend.title = element_text(size = 12, face = 'bold')) +
  labs(color = "Race:")  # Set the legend title

est_life
# Save the plot to a file
ggsave("Life_Exp.png", width = 10, height = 8)
```





```{r}
#| echo: false
#| eval: true
#| warning: false
# Create a dataframe to store the changes by race
change_by_race <- data.frame(
  race = c("All races and origins", "Hispanic", "American Indians and Alaska Native", "Asian", "Black", "White"),
  change_2020_2019 = c(77 - 78.8, 77.9 - 81.9, 67.1 - 71.8, 83.6 - 85.6, 71.5 - 74.8, 77.4 - 78.8),
  change_2021_2020 = c(76.1 - 77, 77.7 - 77.9, 65.2 - 67.1, 83.5 - 83.6, 70.8 - 71.5, 76.4 - 77.4)
)


```

```{r fig.width=8, fig.height=4}
#| echo: false
#| eval: true
#| label: fig-CLE
#| fig-cap: Change in Life Expectancy at Birth from the Previous Year
#| warning: false


# Melt the dataframe
tmp <- melt(change_by_race, id.vars = "race", measure.vars = c("change_2020_2019", "change_2021_2020"), 
             variable.name = "period", value.name = "diff")

# Create PANEL B
change_life_exp <- ggplot(data = tmp, aes(x = race, y = diff, fill = period)) +
  geom_bar(stat = "identity", position = "dodge", alpha = 0.71) +
  scale_y_continuous(name = "Change (years)", breaks = -5:0, limits = c(-5.5, 0)) +
  scale_fill_manual(name = "Time period", values = c('#243f29', '#186d38'), labels = c('2019-2020', '2020-2021')) + 
  scale_color_manual(name = "Time period", values = c('#243f29', '#186d38'), labels = c('2019-2020', '2020-2021')) + 
  theme_minimal() + labs(x = '') +
  geom_text(aes(label = sprintf("%.1f", diff)), position = position_dodge(width = 0.9), vjust = 1.3, size = 4) +
  theme(
    axis.title = element_text(size = 14),
    axis.text.x = element_text(size = 10, hjust = 1),
    axis.text.y = element_text(size = 8),
    legend.text = element_text(size = 12),
    legend.title = element_text(size = 12, face = 'bold')) + 
    scale_x_discrete(labels = function(x) str_wrap(x, width = 15))


change_life_exp
ggsave("Change_Life_Exp.png", width = 10, height = 8)



```


```{r}
#| echo: false
#| eval: true
#| warning: false

vote_data_by_state <- vote_share %>%
  group_by(state_name) %>%
  summarize(
    total_votes = sum(total_votes),
    total_gop_votes = sum(votes_gop),
    total_dem_votes = sum(votes_dem),
    total_diff = sum(diff),
    avg_per_gop = mean(per_gop),
    avg_per_dem = mean(per_dem),
    avg_per_point_diff = mean(per_point_diff)
  )

vote_data_by_state <- vote_data_by_state |>
  mutate(gop_greater = if_else(total_gop_votes > total_dem_votes, 1, 0))

```
```{r}
#| echo: false
#| eval: true
#| warning: false

# Create plot summarizing total number of votes by top 10 republican state
sorted_states <- vote_data_by_state[order(-vote_data_by_state$total_diff), ]

# Extract the top 10 states with the biggest difference
top_10_states <- head(sorted_states, 10)
# Create a data frame for plotting
plot_data <- data.frame(
  state_name = top_10_states$state_name,
  republican_votes = top_10_states$total_gop_votes,
  democrat_votes = top_10_states$total_dem_votes
)

# Convert data to long format for ggplot
plot_data_long <- tidyr::pivot_longer(plot_data, cols = c(republican_votes, democrat_votes), names_to = "party", values_to = "votes")

# Create the stacked bar plot
ggplot(plot_data_long, aes(x = state_name, y = votes, fill = party)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Number of Votes by Top 10 Republican State", x = "State", y = "Total Votes", fill = "Party") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
  scale_fill_manual(values = c("republican_votes" = "red", "democrat_votes" = "blue"),
                    labels = c("Republican Votes", "Democratic Votes"))

```


# Discussion



## Influence of political polarization on adherence to health guidelines.

## Impact of government transparency and consistent communication on public trust.

## Role of social vulnerabilities and healthcare access disparities in pandemic impact.

## Strategies for improving real-time data collection and sharing for public health decisions.

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

# References


